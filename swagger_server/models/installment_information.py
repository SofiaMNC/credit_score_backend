# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class InstallmentInformation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, amt_instalment: float=None, amt_payment: float=None, days_instalment: int=None, num_instalment_number: int=None, num_instalment_version: int=None, sk_id_curr: int=None, sk_id_prev: int=None):  # noqa: E501
        """InstallmentInformation - a model defined in Swagger

        :param amt_instalment: The amt_instalment of this InstallmentInformation.  # noqa: E501
        :type amt_instalment: float
        :param amt_payment: The amt_payment of this InstallmentInformation.  # noqa: E501
        :type amt_payment: float
        :param days_instalment: The days_instalment of this InstallmentInformation.  # noqa: E501
        :type days_instalment: int
        :param num_instalment_number: The num_instalment_number of this InstallmentInformation.  # noqa: E501
        :type num_instalment_number: int
        :param num_instalment_version: The num_instalment_version of this InstallmentInformation.  # noqa: E501
        :type num_instalment_version: int
        :param sk_id_curr: The sk_id_curr of this InstallmentInformation.  # noqa: E501
        :type sk_id_curr: int
        :param sk_id_prev: The sk_id_prev of this InstallmentInformation.  # noqa: E501
        :type sk_id_prev: int
        """
        self.swagger_types = {
            'amt_instalment': float,
            'amt_payment': float,
            'days_instalment': int,
            'num_instalment_number': int,
            'num_instalment_version': int,
            'sk_id_curr': int,
            'sk_id_prev': int
        }

        self.attribute_map = {
            'amt_instalment': 'AMT_INSTALMENT',
            'amt_payment': 'AMT_PAYMENT',
            'days_instalment': 'DAYS_INSTALMENT',
            'num_instalment_number': 'NUM_INSTALMENT_NUMBER',
            'num_instalment_version': 'NUM_INSTALMENT_VERSION',
            'sk_id_curr': 'SK_ID_CURR',
            'sk_id_prev': 'SK_ID_PREV'
        }
        self._amt_instalment = amt_instalment
        self._amt_payment = amt_payment
        self._days_instalment = days_instalment
        self._num_instalment_number = num_instalment_number
        self._num_instalment_version = num_instalment_version
        self._sk_id_curr = sk_id_curr
        self._sk_id_prev = sk_id_prev

    @classmethod
    def from_dict(cls, dikt) -> 'InstallmentInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InstallmentInformation of this InstallmentInformation.  # noqa: E501
        :rtype: InstallmentInformation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amt_instalment(self) -> float:
        """Gets the amt_instalment of this InstallmentInformation.

        What was the prescribed installment amount of previous credit on this installment  # noqa: E501

        :return: The amt_instalment of this InstallmentInformation.
        :rtype: float
        """
        return self._amt_instalment

    @amt_instalment.setter
    def amt_instalment(self, amt_instalment: float):
        """Sets the amt_instalment of this InstallmentInformation.

        What was the prescribed installment amount of previous credit on this installment  # noqa: E501

        :param amt_instalment: The amt_instalment of this InstallmentInformation.
        :type amt_instalment: float
        """

        self._amt_instalment = amt_instalment

    @property
    def amt_payment(self) -> float:
        """Gets the amt_payment of this InstallmentInformation.

        What the client actually paid on previous credit on this installment  # noqa: E501

        :return: The amt_payment of this InstallmentInformation.
        :rtype: float
        """
        return self._amt_payment

    @amt_payment.setter
    def amt_payment(self, amt_payment: float):
        """Sets the amt_payment of this InstallmentInformation.

        What the client actually paid on previous credit on this installment  # noqa: E501

        :param amt_payment: The amt_payment of this InstallmentInformation.
        :type amt_payment: float
        """

        self._amt_payment = amt_payment

    @property
    def days_instalment(self) -> int:
        """Gets the days_instalment of this InstallmentInformation.

        When the installment of previous credit was supposed to be paid (relative to application date of current loan)  # noqa: E501

        :return: The days_instalment of this InstallmentInformation.
        :rtype: int
        """
        return self._days_instalment

    @days_instalment.setter
    def days_instalment(self, days_instalment: int):
        """Sets the days_instalment of this InstallmentInformation.

        When the installment of previous credit was supposed to be paid (relative to application date of current loan)  # noqa: E501

        :param days_instalment: The days_instalment of this InstallmentInformation.
        :type days_instalment: int
        """

        self._days_instalment = days_instalment

    @property
    def num_instalment_number(self) -> int:
        """Gets the num_instalment_number of this InstallmentInformation.

        On which installment we observe payment  # noqa: E501

        :return: The num_instalment_number of this InstallmentInformation.
        :rtype: int
        """
        return self._num_instalment_number

    @num_instalment_number.setter
    def num_instalment_number(self, num_instalment_number: int):
        """Sets the num_instalment_number of this InstallmentInformation.

        On which installment we observe payment  # noqa: E501

        :param num_instalment_number: The num_instalment_number of this InstallmentInformation.
        :type num_instalment_number: int
        """

        self._num_instalment_number = num_instalment_number

    @property
    def num_instalment_version(self) -> int:
        """Gets the num_instalment_version of this InstallmentInformation.

        Version of installment calendar (0 is for credit card) of previous credit. Change of installment version from month to month signifies that some parameter of payment calendar has changed  # noqa: E501

        :return: The num_instalment_version of this InstallmentInformation.
        :rtype: int
        """
        return self._num_instalment_version

    @num_instalment_version.setter
    def num_instalment_version(self, num_instalment_version: int):
        """Sets the num_instalment_version of this InstallmentInformation.

        Version of installment calendar (0 is for credit card) of previous credit. Change of installment version from month to month signifies that some parameter of payment calendar has changed  # noqa: E501

        :param num_instalment_version: The num_instalment_version of this InstallmentInformation.
        :type num_instalment_version: int
        """

        self._num_instalment_version = num_instalment_version

    @property
    def sk_id_curr(self) -> int:
        """Gets the sk_id_curr of this InstallmentInformation.

        ID of loan in our sample  # noqa: E501

        :return: The sk_id_curr of this InstallmentInformation.
        :rtype: int
        """
        return self._sk_id_curr

    @sk_id_curr.setter
    def sk_id_curr(self, sk_id_curr: int):
        """Sets the sk_id_curr of this InstallmentInformation.

        ID of loan in our sample  # noqa: E501

        :param sk_id_curr: The sk_id_curr of this InstallmentInformation.
        :type sk_id_curr: int
        """

        self._sk_id_curr = sk_id_curr

    @property
    def sk_id_prev(self) -> int:
        """Gets the sk_id_prev of this InstallmentInformation.

        ID of previous credit in Home credit related to loan in our sample. (One loan in our sample can have 0,1,2 or more previous loans in Home Credit)  # noqa: E501

        :return: The sk_id_prev of this InstallmentInformation.
        :rtype: int
        """
        return self._sk_id_prev

    @sk_id_prev.setter
    def sk_id_prev(self, sk_id_prev: int):
        """Sets the sk_id_prev of this InstallmentInformation.

        ID of previous credit in Home credit related to loan in our sample. (One loan in our sample can have 0,1,2 or more previous loans in Home Credit)  # noqa: E501

        :param sk_id_prev: The sk_id_prev of this InstallmentInformation.
        :type sk_id_prev: int
        """

        self._sk_id_prev = sk_id_prev
